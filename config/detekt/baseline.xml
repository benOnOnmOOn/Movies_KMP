<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ComplexCondition:Range.kt$(sameSuited &amp;&amp; sameOffsuit &amp;&amp; weightSuited != weightOffsuit) || (sameSuited != sameOffsuit &amp;&amp; weightSuited &gt; 0.0f &amp;&amp; weightOffsuit &gt; 0.0f)</ID>
    <ID>ComplexCondition:Range.kt$i &gt;= 0 &amp;&amp; isSameWeight &amp;&amp; averageWeight &gt; 0.0f &amp;&amp; start == null</ID>
    <ID>ComplexCondition:Range.kt$i &gt;= 0 &amp;&amp; isSameWeight &amp;&amp; weightPair &gt; 0.0f &amp;&amp; start == null</ID>
    <ID>ComplexCondition:Range.kt$start != null &amp;&amp; (i == -1 || !isSameWeight || start.second != averageWeight)</ID>
    <ID>ComplexCondition:Range.kt$start != null &amp;&amp; (i == -1 || !isSameWeight || start.second != weightPair)</ID>
    <ID>CyclomaticComplexMethod:Range.kt$private fun Range.pairsStrings(result: MutableList&lt;String&gt;)</ID>
    <ID>CyclomaticComplexMethod:Range.kt$private inline fun Range.highCardsStrings( result: MutableList&lt;String&gt;, rank1: Int, suitChar: String, getter: (Int, Int) -&gt; List&lt;Int&gt;, )</ID>
    <ID>EmptyDefaultConstructor:PostflopMainViewModel.kt$PostflopMainViewModel$( )</ID>
    <ID>EmptyDefaultConstructor:PostflopRangeViewModel.kt$PostflopRangeViewModel$( )</ID>
    <ID>EmptyDefaultConstructor:PostflopTreViewModel.kt$PostflopTreViewModel$( )</ID>
    <ID>EmptyFunctionBlock:PostflopTreViewModel.kt$PostflopTreViewModel${ }</ID>
    <ID>ForbiddenComment:PostflopMainViewModel.kt$PostflopMainViewModel$// TODO: Add this later</ID>
    <ID>LongMethod:PostflopTreeScreen.kt$@Composable internal fun PostflopTreeConfigurationScreen( modifier: Modifier = Modifier, viewmodel: PostflopTreViewModel = koinViewModel(), )</ID>
    <ID>LongParameterList:MoveDetailDto.kt$MoveDetailDto$( val id: Int, val posterUrl: String, val publicationDate: String, val language: String, val title: String, val genre: Set&lt;String&gt;, val overview: String, )</ID>
    <ID>MagicNumber:KotlinAndroid.kt$27</ID>
    <ID>MagicNumber:KotlinAndroid.kt$35</ID>
    <ID>MagicNumber:KotlinAndroidLibraryConventionPlugin.kt$KotlinAndroidLibraryConventionPlugin$27</ID>
    <ID>MagicNumber:KotlinAndroidLibraryConventionPlugin.kt$KotlinAndroidLibraryConventionPlugin$35</ID>
    <ID>MagicNumber:PostflopBoardScreen.kt$15</ID>
    <ID>MagicNumber:PostflopBoardScreen.kt$4</ID>
    <ID>MagicNumber:PostflopBoardScreen.kt$52</ID>
    <ID>MagicNumber:PostflopRangeScreen.kt$100</ID>
    <ID>MagicNumber:PostflopRangeScreen.kt$13</ID>
    <ID>MagicNumber:PostflopRangeViewModel.kt$PostflopRangeViewModel$0.01f</ID>
    <ID>MagicNumber:PostflopRangeViewModel.kt$PostflopRangeViewModel$100</ID>
    <ID>MagicNumber:PostflopRangeViewModel.kt$PostflopRangeViewModel$12</ID>
    <ID>MagicNumber:PostflopRangeViewModel.kt$PostflopRangeViewModel$13</ID>
    <ID>MagicNumber:Range.kt$10</ID>
    <ID>MagicNumber:Range.kt$101</ID>
    <ID>MagicNumber:Range.kt$103</ID>
    <ID>MagicNumber:Range.kt$103.0</ID>
    <ID>MagicNumber:Range.kt$11</ID>
    <ID>MagicNumber:Range.kt$12</ID>
    <ID>MagicNumber:Range.kt$16</ID>
    <ID>MagicNumber:Range.kt$3</ID>
    <ID>MagicNumber:Range.kt$4</ID>
    <ID>MagicNumber:Range.kt$51</ID>
    <ID>MagicNumber:Range.kt$6</ID>
    <ID>MagicNumber:Range.kt$7</ID>
    <ID>MagicNumber:Range.kt$8</ID>
    <ID>MagicNumber:Range.kt$8.0</ID>
    <ID>MagicNumber:Range.kt$9</ID>
    <ID>MagicNumber:Range.kt$Range$51</ID>
    <ID>MagicNumber:Range.kt$Range$52</ID>
    <ID>MagicNumber:RangeState.kt$12</ID>
    <ID>MagicNumber:RangeState.kt$13</ID>
    <ID>MagicNumber:Utils.kt$10</ID>
    <ID>NestedBlockDepth:Range.kt$private fun Range.suitSpecifiedStrings(result: MutableList&lt;String&gt;)</ID>
    <ID>TooManyFunctions:Range.kt$com.bz.movies.presentation.screens.postflop.utils.Range.kt</ID>
    <ID>UnusedParameter:PostflopMainViewModel.kt$PostflopMainViewModel$event: MovieEvent</ID>
    <ID>UnusedParameter:PostflopTreViewModel.kt$PostflopTreViewModel$event: TreeEditEvent</ID>
    <ID>UnusedPrivateProperty:PostflopTreViewModel.kt$PostflopTreViewModel$/** * Combinations range for all possible card combination. * We are displaying only card singletons data, * and reuse all of this data when updating any weight in range */ private var range: Range = Range()</ID>
    <ID>UseCheckOrError:Range.kt$throw IllegalStateException("Invalid suitedness: $combo")</ID>
  </CurrentIssues>
</SmellBaseline>
